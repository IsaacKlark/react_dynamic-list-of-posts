{"version":3,"sources":["Comment.js","Post.js","PostList.js","UnitedBlock.js","api/GetDataFromServer.js","Main.js","App.js","index.js"],"names":["Comment","_ref","comment","react_default","a","createElement","className","name","email","body","Post","ownpost","Fragment","title","user","address","street","suite","city","zipcode","geo","lat","lng","comments","map","src_Comment","key","id","PostList","posts","post","src_Post","UnitedBlock","users","Object","objectSpread2","find","userId","filter","commentId","postId","GetDataFromServer","URL","fetch","then","dataList","json","Main","_useState","useState","_useState2","slicedToArray","setPosts","_useState3","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","loading","setIsLoading","_useState7","_useState8","textInput","setTextInput","postsUsersComments","type","onClick","_ref2","allUsers","allComments","allPosts","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","stop","includes","_unused","placeholder","onChange","f","delay","timer","clearTimeout","setTimeout","debounce","document","querySelector","value","length","src_PostList","App","src_Main","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.e9eb1ad0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Comment = ({ comment }) => (\n  <div>\n    <h3 className=\"headers\">\n      {comment.name}\n    </h3>\n    <p>\n      {comment.email}\n    </p>\n    <p>\n      {comment.body}\n    </p>\n  </div>\n);\n\nComment.propTypes = { comment: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default Comment;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Comment from './Comment';\n\nconst Post = ({ ownpost }) => (\n  <>\n    <section className=\"post\">\n      <h1 className=\"post__title\">\n        {ownpost.title}\n      </h1>\n      <p className=\"post__text\">\n        {ownpost.body}\n      </p>\n    </section>\n    <section className=\"userSection\">\n      {ownpost.user.name}\n      <br />\n      {ownpost.user.email}\n      <br />\n      {ownpost.user.address.street}\n      {ownpost.user.address.suite}\n      {ownpost.user.address.city}\n      {ownpost.user.address.zipcode}\n      {ownpost.user.address.geo.lat}\n      {ownpost.user.address.geo.lng}\n    </section>\n    <section className=\"commentSection\">\n      {\n        ownpost.comments.map(comment => (\n          <Comment key={comment.id} comment={comment} />))\n      }\n    </section>\n  </>\n);\n\nPost.propTypes = { ownpost: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <section className=\"post-list\">\n    { posts.map(post => (\n      <div key={post.id} className=\"allPost\">\n        <Post ownpost={post} />\n      </div>\n    ))}\n  </section>\n);\n\nPostList.propTypes = { posts: PropTypes.arrayOf(PropTypes.any).isRequired };\n\nexport default PostList;\n","const UnitedBlock = (posts, users, comments) => (\n  posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(commentId => commentId.postId === post.id),\n  })));\n\nexport default UnitedBlock;\n","const GetDataFromServer = URL => fetch(URL).then(dataList => dataList.json());\n\nexport default GetDataFromServer;\n","import React, { useState } from 'react';\n\nimport PostList from './PostList';\nimport UnitedBlock from './UnitedBlock';\nimport GetDataFromServer from './api/GetDataFromServer';\n\nconst Main = () => {\n  const [posts, setPosts] = useState({\n    post: [],\n    user: [],\n    comments: [],\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loading, setIsLoading] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  let postsUsersComments\n    = UnitedBlock(posts.post, posts.user, posts.comments);\n\n  const loadPosts = async() => {\n    setIsLoading(true);\n    const [allUsers, allComments, allPosts]\n    = await Promise.all([\n      GetDataFromServer('https://jsonplaceholder.typicode.com/users'),\n      GetDataFromServer('https://jsonplaceholder.typicode.com/comments'),\n      GetDataFromServer('https://jsonplaceholder.typicode.com/posts'),\n    ]);\n\n    setIsLoading(true);\n    setPosts({\n      post: allPosts,\n      user: allUsers,\n      comments: allComments,\n    });\n    setIsLoading(false);\n    setIsLoaded(true);\n  };\n\n  function debounce(f, delay) {\n    let timer;\n\n    return () => {\n      clearTimeout(timer);\n      timer = setTimeout(() => f(), delay);\n    };\n  }\n\n  function inputText() {\n    setTextInput(document.querySelector('#text').value);\n  }\n\n  if (loading) {\n    return (\n      <p className=\"App\">\n          ...LOADING\n      </p>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <section className=\"App\">\n        <button type=\"button\" onClick={loadPosts}>\n          Load\n        </button>\n      </section>\n    );\n  }\n\n  try {\n    postsUsersComments = postsUsersComments.filter((post) => {\n      const postContent = post.title + post.body;\n\n      return postContent.includes(textInput);\n    });\n  } catch {\n    postsUsersComments = [];\n  }\n\n  return (\n    <section className=\"App\">\n      <input\n        id=\"text\"\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={debounce(inputText, 1000)}\n      />\n      <p>\n        {postsUsersComments.length}\n        {' '}\n        posts found\n      </p>\n      <PostList posts={postsUsersComments} />\n    </section>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Main from './Main';\n\nconst App = () => <Main />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}