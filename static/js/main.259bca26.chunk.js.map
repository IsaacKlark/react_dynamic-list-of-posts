{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","UnitedBlock.js","api/GetDataFromServer.js","Main.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","email","concat","address","street","suite","city","zipcode","geo","lat","lng","Comment","comment","body","CommentList","findcommet","map","src_Comment","key","Math","random","Post","ownpost","Fragment","title","src_User","src_CommentList","comments","PostList","posts","post","id","src_Post","UnitedBlock","users","Object","objectSpread2","find","userId","filter","commentId","postId","GetDataFromServer","URL","fetch","then","dataList","json","Main","_useState","useState","_useState2","slicedToArray","postList","setPostList","_useState3","_useState4","userList","setUserList","_useState5","_useState6","commentsList","setCommentsList","_useState7","_useState8","isLoaded","setIsLoaded","_useState9","_useState10","loading","setIsLoading","_useState11","_useState12","textInput","setTextInput","postsUsersComments","type","onClick","_ref2","allUsers","allComments","allPosts","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","stop","RegExp","test","_unused","placeholder","onChange","e","target","value","length","src_PostList","App","src_Main","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.259bca26.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst User = ({ user }) => (\n  <section className=\"userSection\">\n    {user.name}\n    <br />\n    {user.email}\n    <br />\n    {`${user.address.street} `}\n    {`${user.address.suite} `}\n    {`${user.address.city} `}\n    {`${user.address.zipcode} `}\n    {`${user.address.geo.lat} `}\n    {`${user.address.geo.lng} `}\n  </section>\n);\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Comment = ({ comment }) => (\n  <div>\n    <h3 className=\"headers\">\n      {comment.name}\n    </h3>\n    <p>\n      {comment.email}\n    </p>\n    <p>\n      {comment.body}\n    </p>\n  </div>\n);\n\nComment.propTypes = { comment: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default Comment;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Comment from './Comment';\n\nconst CommentList = ({ findcommet }) => (\n  <section className=\"commentSection\">\n    {\n      findcommet.map(comment => (\n        <Comment key={Math.random() * 1000} comment={comment} />))\n    }\n  </section>\n);\n\nCommentList.propTypes = (\n  { findcommet: PropTypes.arrayOf(PropTypes.any).isRequired }\n);\n\nexport default CommentList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ ownpost }) => (\n  <>\n    <section className=\"onepost\">\n      <h1 className=\"tileOfPost\">\n        {ownpost.title}\n      </h1>\n      <p className=\"bodypost\">\n        {ownpost.body}\n      </p>\n    </section>\n    <User user={ownpost.user} />\n    <CommentList findcommet={ownpost.comments} />\n  </>\n);\n\nPost.propTypes = { ownpost: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <section className=\"postlist\">\n    { posts.map(post => (\n      <div key={post.id} className=\"allPost\">\n        <Post ownpost={post} />\n      </div>\n    ))}\n  </section>\n);\n\nPostList.propTypes = { posts: PropTypes.arrayOf(PropTypes.any).isRequired };\n\nexport default PostList;\n","const UnitedBlock = (posts, users, comments) => (\n  posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(commentId => commentId.postId === post.id),\n  })));\n\nexport default UnitedBlock;\n","const GetDataFromServer = URL => fetch(URL).then(dataList => dataList.json());\n\nexport default GetDataFromServer;\n","import React, { useState } from 'react';\n\nimport PostList from './PostList';\nimport UnitedBlock from './UnitedBlock';\nimport GetDataFromServer from './api/GetDataFromServer';\n\nconst Main = () => {\n  const [postList, setPostList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [commentsList, setCommentsList] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loading, setIsLoading] = useState(false);\n  const [textInput, setTextInput] = useState('');\n  let postsUsersComments\n    = UnitedBlock(postList, userList, commentsList);\n\n  const load = async() => {\n    setIsLoading(true);\n    const [allUsers, allComments, allPosts]\n    = await Promise.all([\n      GetDataFromServer('https://jsonplaceholder.typicode.com/users'),\n      GetDataFromServer('https://jsonplaceholder.typicode.com/comments'),\n      GetDataFromServer('https://jsonplaceholder.typicode.com/posts'),\n    ]);\n\n    setIsLoading(true);\n    setUserList(allUsers);\n    setCommentsList(allComments);\n    setPostList(allPosts);\n    setIsLoading(false);\n    setIsLoaded(true);\n  };\n\n  const inputText = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  if (loading) {\n    return (\n      <p className=\"App\">\n          ...LOADING\n      </p>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n      <section className=\"App\">\n        <button type=\"button\" onClick={load}>\n          Load\n        </button>\n      </section>\n    );\n  }\n\n  try {\n    postsUsersComments = postsUsersComments.filter(post => (\n      new RegExp(`(${textInput})`, 'g').test(post.title)\n      || new RegExp(`(${textInput})`, 'g').test(post.body)\n    ));\n  } catch {\n    postsUsersComments = [];\n  }\n\n  return (\n    <section className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={inputText}\n      />\n      <p>\n        {postsUsersComments.length}\n        {' '}\n        posts found\n      </p>\n      <PostList posts={postsUsersComments} />\n    </section>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Main from './Main';\n\nconst App = () => <Main />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}